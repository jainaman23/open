/// All Custom mixin file.

/// Import Compass Library.
@import 'compass';

/// Import all variables.
@import 'variables';

/// Content Wrapper
///  It wrap the content in the following order All screen above
///  799 will have 40px padding minimum.
///  1280 - large width: 1200px
///  1080 - 1279  width: 1000px
///  799  - 1079  width: 720px
///  under 799    width: 100%;
///
@mixin box {
  margin: auto;
  @media all and (max-width: $sm) {
    width: 100%;
    padding: 0 15px;
  }

  @media all and (min-width: $sm + 1) {
    width: 720px;
  }

  @media all and (min-width: $md) {
    width: 1000px;
  }

  @media all and (min-width: $lg) {
    width: 1200px;
  }
}

/// Transtition Button
///  Bordered Button turns background on hover & focus.
///
/// @param $text-color
///   Initially text will be shown as $text-color, on hover background
///   will have background-color as $text-color and text will have white
///   color.
/// @param $border-radius
///   Amount of curveness to corners. It is optional.
///   Default is 0px. To give radius use the following syntex in parameter.
///   $border-radius: <your-value>
@mixin trans_button($text-color, $border-radius: 0px) {
  border: 1px solid $text-color;
  padding: 10px 25px;
  text-align: center;
  font-weight: 600;
  background-color: transparent;
  @include border-radius($border-radius);
  @include transition(0.25s);
  color: $text-color;
  display: inline-block;
  text-decoration: none;
  @include box-shadow(inset 0 0 1px 0 $text-color);

  &:hover, &:focus {
    background: darken($text-color, 10%);
    color: $white;
  }
}

/// Background Button
///  Bordered Button turns background on hover & focus.
///
/// @param $text-color
///   Initially text will be shown as $text-color, on hover background
///   will have background-color as $text-color and text will have white
///   color.
/// @param $border-radius
///   Amount of curveness to corners. It is optional.
///   Default is 0px. To give radius use the following syntex in parameter.
///   $border-radius: <your-value>
@mixin solid_button($background-color, $border-radius: 0px) {
  border: 1px solid $background-color;
  padding: 10px 20px;
  text-align: center;
  font-weight: 600;
  background-color: $background-color;
  @include border-radius($border-radius);
  @include transition(0.25s);
  color: $white;
  display: inline-block;
  text-decoration: none;
  @include box-shadow(0 0 1px 0 $background-color);

  &:hover, &:focus {
    background: darken($background-color, 10%);
  }

  &:active {
    background: darken($background-color, 15%);
  }
}


/// Get Involved Block
///   It will have an image, a text and a button.
///   It is view block.
///
/// @param $title-color
///   Color of title
/// @param $text-color
///   Color of Description
/// @param $button-color
///   Color of transparent background button.
///
/// Classes:
///   .views-row:                          Wrapper of Block
///   .views-field-field-ct-image:         Image Wrapper
///   .views-field-title:                  Heading Wrapper
///   .views-field-body:                   Description Wrapper
///   .views-field-field-ct-register-link: Button or a tag.
@mixin get_involved($title-color, $text-color, $button-color) {
  .views-row {
    display: inline-block;
    vertical-align: top;
    padding: 0 25px;
    text-align: center;

    .views-field-field-ct-image {
      margin: auto;
    }

    .views-field-title {
      text-transform: uppercase;
      font-size: $font-size-20;
      color: $title-color;
      padding: 10px 0 15px;
      font-weight: 600;
    }

    .views-field-body {
      font-size: $font-size-15;
      font-weight: 600;
      line-height: $font-size-24;
      color: $text-color;
    }

    .views-field-field-ct-register-link {
      padding: 25px 0;

      a {
        @include trans_button($button-color);
        padding: 10px 57px;
        text-transform: uppercase;
      }
    }
  }
}

/// Display Flex
@mixin display-flex {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

/// Jsutify Content
@mixin flex-justify($position) {
  -webkit-box-pack: $position;
  -moz-box-pack: $position;
  -ms-flex-pack: $position;
  -webkit-justify-content: $position;
  justify-content: $position;
}

@mixin align-items($position) {
  -webkit-box-align: $position;
  -moz-box-align: $position;
  -ms-flex-align: $position;
  -webkit-align-items: $position;
  align-items: $position;
}
